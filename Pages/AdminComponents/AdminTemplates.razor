@using FormsApp.Data
@using FormsApp.Shared
@inject LocalizationService Loc
@inject ITemplateService TemplateService
@inject NavigationManager Navigation

<div class="toolbar mb-2">
    <button class="btn btn-danger"
            @onclick="@(() => TableUtils.DeleteSelected(selectedTemplates, templates, DeleteTemplate, t => t.Id))"
            disabled="@(!selectedTemplates.Any())">
        @Loc["DeleteSelected"]
    </button>
</div>
<SortableTable TItem="Template"
               Items="SortedTemplates"
               Columns="columns"
               SortField="sortColumn"
               SortDirection="@(sortAscending ? "asc" : "desc")"
               OnSort="OnSort"
               OnRowClick="OnRowClickTemplate">
    <RowTemplate Context="template">
        <td><input type="checkbox" checked="@selectedTemplates.Contains(template.Id)" @onchange="e => TableUtils.UpdateSelection(e, template.Id, selectedTemplates, SortedTemplates.Select(t => t.Id).ToList())" @onclick:stopPropagation /></td>
        <td>@template.Title</td>
        <td>@(template.Author?.Email ?? "Неизвестно")</td>
        <td>@TableUtils.TruncateDescription(template.Description)</td>
        <td>@template.CreatedAt.ToShortDateString()</td>
    </RowTemplate>
</SortableTable>

@code {
    private List<Template> templates = new();
    private List<int> selectedTemplates = new();
    private string sortColumn = "CreatedAt";
    private bool sortAscending = true;
    private List<SortableTable<Template>.SortableColumn> columns;
    private Dictionary<string, Func<Template, object?>> sortSelectors;
    private List<Template> SortedTemplates => TableUtils.GetSorted(templates, sortColumn, sortAscending, sortSelectors, "CreatedAt");
    protected override void OnInitialized()
    {
        templates = TemplateService.GetAllTemplates();
        columns = new()
        {
            new() { Title = "", Field = "Select", Sortable = false },
            new() { Title = Loc["Template"], Field = "Title", Sortable = true },
            new() { Title = Loc["Author"], Field = "Author", Sortable = true },
            new() { Title = Loc["Description"], Field = "Description", Sortable = true },
            new() { Title = Loc["Date"], Field = "CreatedAt", Sortable = true }
        };
        sortSelectors = new()
        {
            ["Title"] = t => t.Title ?? string.Empty,
            ["Author"] = t => t.Author?.Email ?? string.Empty,
            ["Description"] = t => t.Description ?? string.Empty,
            ["CreatedAt"] = t => t.CreatedAt
        };
    }
    private void OnSort(string column) => TableUtils.OnSort(ref sortColumn, ref sortAscending, column);
    private void DeleteTemplate(int templateId) => TableUtils.DeleteItem(templateId, templates, TemplateService.DeleteTemplate, t => t.Id);
    private void DeleteSelectedTemplates() => TableUtils.DeleteSelected(selectedTemplates, templates, DeleteTemplate, t => t.Id);
    private void OnRowClickTemplate(Template template) => Navigation.NavigateTo($"/template/{template.Id}");
} 