@using FormsApp.Data
@using FormsApp.Shared
@inject LocalizationService Loc
@inject IFormService FormService
@inject NavigationManager Navigation

<div class="toolbar mb-2">
    <button class="btn btn-danger"
            @onclick="@(() => TableUtils.DeleteSelected(selectedForms, forms, DeleteForm, f => f.Id))"
            disabled="@(!selectedForms.Any())">
        @Loc["DeleteSelected"]
    </button>
</div>
<SortableTable TItem="Form"
               Items="SortedForms"
               Columns="columns"
               SortField="sortColumn"
               SortDirection="@(sortAscending ? "asc" : "desc")"
               OnSort="OnSort"
               OnRowClick="OnRowClickForm">
    <RowTemplate Context="form">
        <td><input type="checkbox" checked="@selectedForms.Contains(form.Id)" @onchange="e => TableUtils.UpdateSelection(e, form.Id, selectedForms, SortedForms.Select(f => f.Id).ToList())" @onclick:stopPropagation /></td>
        <td>@(form.Template?.Title ?? "Неизвестно")</td>
        <td>@(form.User?.Email ?? "Неизвестно")</td>
        <td>@form.FilledAt.ToShortDateString()</td>
    </RowTemplate>
</SortableTable>

@code {
    private List<Form> forms = new();
    private List<int> selectedForms = new();
    private string sortColumn = "FilledAt";
    private bool sortAscending = true;
    private List<SortableTable<Form>.SortableColumn> columns;
    private Dictionary<string, Func<Form, object?>> sortSelectors;
    private List<Form> SortedForms => TableUtils.GetSorted(forms, sortColumn, sortAscending, sortSelectors, "FilledAt");
    protected override void OnInitialized()
    {
        forms = FormService.GetAllForms();
        columns = new()
        {
            new() { Title = "", Field = "Select", Sortable = false },
            new() { Title = Loc["Template"], Field = "Template", Sortable = true },
            new() { Title = Loc["User"], Field = "User", Sortable = true },
            new() { Title = Loc["Date"], Field = "FilledAt", Sortable = true }
        };
        sortSelectors = new()
        {
            ["Template"] = f => f.Template?.Title ?? string.Empty,
            ["User"] = f => f.User?.Email ?? string.Empty,
            ["FilledAt"] = f => f.FilledAt
        };
    }
    private void OnSort(string column) => TableUtils.OnSort(ref sortColumn, ref sortAscending, column);
    private void DeleteForm(int formId) => TableUtils.DeleteItem(formId, forms, FormService.DeleteForm, f => f.Id);
    private void OnRowClickForm(Form form) => Navigation.NavigateTo($"/filled/{form.Id}");
} 